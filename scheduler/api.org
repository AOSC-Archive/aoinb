* API between Scheduler and Builder
A ping message will be sent by the Scheduler every 10 minutes, and the Builder must pong in 10s, or it is a timeout and Scheduler will declare this Builder offline.

** new_job
S->B
#+BEGIN_SRC json
{
  "type": "new_job",
  "result": null,
  "job": {
	"uuid": "bf501691-90d5-4d0f-b4f2-a1756baa57e8",
	"stauts": "new",
	"name": "test-name",
	"description": "test-description",
	"package": ["pkg1", "pkg2", "pkg3"],
	"architecture": ["arch1", "arch2", "arch3"]
  }
}
#+END_SRC

*** Response
B->S
#+BEGIN_SRC json
{
  "type": "new_job",
  "result": "success", 
  "job": {
	"uuid": "bf501691-90d5-4d0f-b4f2-a1756baa57e8",
	"status": "building" 
  }
}
#+END_SRC

** job_finished
B->S
#+BEGIN_SRC json
{
  "type": "job_finished",
  "result": null,
  "job": {
	"uuid": "bf501691-90d5-4d0f-b4f2-a1756baa57e8",
	"status": "finished/failed"
  }
}
#+END_SRC

*** Response
S->B
#+BEGIN_SRC json
{
  "type": "job_finished",
  "result" "success",
  "job": {
	"uuid": "bf501691-90d5-4d0f-b4f2-a1756baa57e8",
	"status": "finished"
  }
}
#+END_SRC

** cancel_job
S->B, used to let builder stop building the package (in case a fix just arrived).
#+BEGIN_SRC json
{
  "type": "cancel_job",
  "result": null,
  "job": {
	"uuid": "bf501691-90d5-4d0f-b4f2-a1756baa57e8"
	"status": "building",
  }
}
#+END_SRC

** get_build_result
S->B, one request at a time (no need for several afterall, eh?)

#+BEGIN_SRC json
{
  "type": "get_build_result",
  "result": null,
  "job": {
	"uuid": "bf501691-90d5-4d0f-b4f2-a1756baa57e8",
	"status": "finished"
  }
}
#+END_SRC

*** Response
B->S

First send a giant blob! Then:

#+BEGIN_SRC json
{
  "type": "get_build_result",
  "result": "success",
  "job": {
	"uuid": "bf501691-90d5-4d0f-b4f2-a1756baa57e8",
	"status": "finished"
  }
}
#+END_SRC


* States of a Job
#+BEGIN_SRC 
new -> building -> finished
                -> failed
                -> cancelled (manual intervention)
#+END_SRC
